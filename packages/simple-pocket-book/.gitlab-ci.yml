# .gitlab-ci.yml

lint js:
  image: node:lts
  stage: build
  script:
    - npm install --progress=false
    - npm run lint:js
  cache:
    paths:
      - node_modules/

lint css:
  image: node:lts
  stage: build
  script:
    - npm install --progress=false
    - npm run lint:css
  cache:
    paths:
      - node_modules/

build web:
  image: node:lts
  stage: build
  before_script:
    - apt-get update
    - apt-get install -y wget gnupg
    - curl -sS -o - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
    - sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
    - apt-get update
    - apt-get install -y google-chrome-stable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf libxss1 libxtst6
  script:
    - npm install --progress=false
    - npm run build
  artifacts:
    expire_in: 1 week
    paths:
      - build
  cache:
    paths:
      - node_modules/

unit test:
  image: node:lts
  stage: test
  script:
    - npm install --progress=false
    - npm run test:unit
  cache:
    paths:
      - node_modules/

coverage test:
  image: node:lts
  stage: test
  script:
    - npm install --progress=false
    - npm run test:coverage
  cache:
    paths:
      - node_modules/

e2e test:chrome:
  image: node:lts
  stage: test
  before_script:
    - apt-get update
    - apt-get install -yq libnss3 unzip openjdk-8-jre-headless xvfb libxi6 libgconf-2-4
    - apt-get update
    - apt-get install -y wget gnupg
    - curl -sS -o - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
    - sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
    - apt-get update
    - apt-get install -y fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf libxss1 libxtst6
    - apt-get update
    - wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    - curl -sS -o - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
    - apt install -y ./google-chrome-stable_current_amd64.deb
  script:
    - npm install --progress=false
    - npm run test:e2e:chrome
  after_script:
    - rm -f ./google-chrome-stable_current_amd64.deb
  cache:
    paths:
      - node_modules/

e2e test:firefox:
  image: node:lts
  stage: test
  before_script:
    - apt-get update
    - apt-get install -y wget gnupg
    - curl -sS -o - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
    - sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
    - apt-get update
    - apt-get install -y google-chrome-stable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf libxss1 libxtst6
    - apt-get update
    - apt-get install -y firefox-esr
  script:
    - npm install --progress=false
    - npm run test:e2e:firefox
  cache:
    paths:
      - node_modules/

lighthouse ci:
  image: node:lts
  stage: test
  allow_failure: true
  before_script:
    - apt-get update
    - apt-get install -yq libnss3 unzip openjdk-8-jre-headless xvfb libxi6 libgconf-2-4
    - apt-get update
    - apt-get install -y wget gnupg
    - curl -sS -o - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
    - sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
    - apt-get update
    - apt-get install -y fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf libxss1 libxtst6
    - apt-get update
    - wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    - curl -sS -o - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
    - apt install -y ./google-chrome-stable_current_amd64.deb
  script:
    - npm install --progress=false
    - npm run lighthouse
  cache:
    paths:
      - node_modules/

deploy staging:
  image: alpine
  stage: deploy
  script:
    - apk add --no-cache rsync openssh
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" >> ~/.ssh/id_dsa
    - chmod 600 ~/.ssh/id_dsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - rsync -rav --delete build/ $USERNAME@$HOST_PATH
  environment:
    name: staging
    url: $STAGING_URL
  only:
    - master

deploy prod:
  image: alpine
  stage: deploy
  script:
    - apk add --no-cache rsync openssh
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" >> ~/.ssh/id_dsa
    - chmod 600 ~/.ssh/id_dsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - rsync -rav --delete build/ $USERNAME@$HOST_PATH
  environment:
    name: production
    url: $PRODUCTION_URL
  when: manual
  only:
    - master
